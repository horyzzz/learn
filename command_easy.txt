查询git状态 git status
查看差异 git diff
版本查看 git log
版本回滚 git reset --hard xxxxxxx (xxxxxxx为版本号)
查看之前的命令 git reflog
查看文件内容 cat xxxxx(xxxxx为文件名)
查看工作区和版本库里面最新版本的区别git diff HEAD -- xxxxx (xxxxx为文件名)
撤销操作：
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。

链接远程库
git clone xxxxxxxxx(xxxxxxxxx为远程库地址)

git add xxxx(xxxx为修改的文件或者文件夹)
git commit -m 'xxxx'(对此次操作的说明)
git push -u origin master(将本次操作上传至远程库)

创建分支
git checkout -b xxx(xxx为分支名)

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>或者git switch <name>

创建+切换分支：git checkout -b <name>或者git switch -c <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

快速合并会产生冲突情况：
每次进行分支操作后，需要切换至master分支后再进行合并。

当Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成。

解决冲突就是把Git合并失败的文件手动编辑为我们希望的内容，再提交。

用git log --graph命令可以看到分支合并图。

普通合并方式：
普通方式合并分支 git merge --no-ff -m "desc" branchName (desc为合并描述，branchName为分支名称)

从远程库拉取最新版本：git pull